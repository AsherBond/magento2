<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Copyright 2025 Adobe
 * All Rights Reserved.
 */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontCartSynchronizationWithMultipleProductChangesTest">
        <annotations>
            <features value="Checkout"/>
            <stories value="Shopping Cart Synchronization"/>
            <title value="Cart updates with multiple product changes and admin cart management"/>
            <description value="Customer Checkout With multiple products where admin changes product price, stock status, and manages customer cart with Customer Data Lifetime configuration"/>
            <severity value="MAJOR"/>
            <testCaseId value="AC-4303"/>
            <group value="checkout"/>
        </annotations>
        <before>
            <!-- Preconditions 1,2,3: Create 3 Simple products with different prices -->
            <createData entity="SimpleProduct2" stepKey="createSimple1Product">
                <field key="price">10</field>
            </createData>
            <createData entity="SimpleProduct2" stepKey="createSimple2Product">
                <field key="price">20</field>
            </createData>
            <createData entity="SimpleProduct2" stepKey="createSimple3Product">
                <field key="price">30</field>
            </createData>
            <!-- Preconditions 4: Create customer johndoe@example.com -->
            <createData entity="Simple_US_Customer" stepKey="createCustomer"/>
            <!-- Admin login -->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <!-- Reset Customer Data Lifetime to default -->
            <actionGroup ref="SetCustomerDataLifetimeActionGroup" stepKey="resetCustomerDataLifetime"/>
            <!-- Logout customer from storefront -->
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="logoutCustomer"/>
            <!-- Delete test data -->
            <deleteData createDataKey="createSimple1Product" stepKey="deleteSimple1Product"/>
            <deleteData createDataKey="createSimple2Product" stepKey="deleteSimple2Product"/>
            <deleteData createDataKey="createSimple3Product" stepKey="deleteSimple3Product"/>
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <!-- Admin logout -->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="adminLogout"/>
        </after>
        <!--Flush cache and Reindex-->
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushCache">
                <argument name="tags" value=""/>
            </actionGroup>

        <!-- Step 1: Go to Storefront as logged in Customer from preconditions -->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginToStorefront">
            <argument name="Customer" value="$createCustomer$"/>
        </actionGroup>
        <!-- Step 2: Add to Shopping Cart next products -->
        <!-- Simple1, qty = 1 -->
        <actionGroup ref="StorefrontOpenProductEntityPageActionGroup" stepKey="goToSimple1ProductPage">
            <argument name="product" value="$createSimple1Product$"/>
        </actionGroup>
        <actionGroup ref="AddToCartFromStorefrontProductPageActionGroup" stepKey="addSimple1ToCart">
            <argument name="productName" value="$createSimple1Product.name$"/>
        </actionGroup>
        <!-- Simple2, qty = 2 -->
        <actionGroup ref="StorefrontOpenProductEntityPageActionGroup" stepKey="goToSimple2ProductPage">
            <argument name="product" value="$createSimple2Product$"/>
        </actionGroup>
        <actionGroup ref="AddProductWithQtyToCartFromStorefrontProductPageActionGroup" stepKey="addSimple2ToCart">
            <argument name="productName" value="$createSimple2Product.name$"/>
            <argument name="productQty" value="2"/>
        </actionGroup>
        <!-- Simple3, qty = 3 -->
        <actionGroup ref="StorefrontOpenProductEntityPageActionGroup" stepKey="goToSimple3ProductPage">
            <argument name="product" value="$createSimple3Product$"/>
        </actionGroup>
        <actionGroup ref="AddProductWithQtyToCartFromStorefrontProductPageActionGroup" stepKey="addSimple3ToCart">
            <argument name="productName" value="$createSimple3Product.name$"/>
            <argument name="productQty" value="3"/>
        </actionGroup>
        <!-- Expected Result: Mini-Cart red icon with number = 6 is shown (1+2+3) -->
        <waitForText userInput="6" selector="{{StorefrontMinicartSection.productCount}}" time="30" stepKey="assertProductCount"/>
        <!-- Verify Mini-Cart has all added products with correct prices -->
        <actionGroup ref="StorefrontClickOnMiniCartActionGroup" stepKey="openMiniCartToVerify"/>
        <waitForElementVisible selector="{{StorefrontMinicartSection.productLinkByName($createSimple1Product.name$)}}" stepKey="seeSimple1InMiniCart"/>
        <waitForText userInput="$10.00" selector="{{StorefrontMinicartSection.productPriceByName($createSimple1Product.name$)}}" stepKey="seeSimple1InitialPrice"/>
        <waitForElementVisible selector="{{StorefrontMinicartSection.productLinkByName($createSimple2Product.name$)}}" stepKey="seeSimple2InMiniCart"/>
        <waitForText userInput="$20.00" selector="{{StorefrontMinicartSection.productPriceByName($createSimple2Product.name$)}}" stepKey="seeSimple2InitialPrice"/>
        <waitForElementVisible selector="{{StorefrontMinicartSection.productLinkByName($createSimple3Product.name$)}}" stepKey="seeSimple3InMiniCart"/>
        <waitForText userInput="$30.00" selector="{{StorefrontMinicartSection.productPriceByName($createSimple3Product.name$)}}" stepKey="seeSimple3InitialPrice"/>
        <!-- Cart Subtotal = 140 (10*1 + 20*2 + 30*3) -->
        <actionGroup ref="AssertStorefrontMiniCartSubtotalActionGroup" stepKey="verifyCartSubtotal">
            <argument name="subtotal" value="$140.00"/>
        </actionGroup>
        <actionGroup ref="StorefrontClickOnMiniCartActionGroup" stepKey="closeMiniCart"/>
        <!-- Step 3: Go to Shopping Cart page -->
        <actionGroup ref="StorefrontCartPageOpenActionGroup" stepKey="goToShoppingCart"/>
        <!-- Expected Result: Shopping Cart page is opened with all 3 products, Subtotal = 140 -->
        <waitForElementVisible selector="{{CheckoutCartProductSection.ProductLinkByName($createSimple1Product.name$)}}" stepKey="seeSimple1InCart"/>
        <waitForElementVisible selector="{{CheckoutCartProductSection.ProductLinkByName($createSimple2Product.name$)}}" stepKey="seeSimple2InCart"/>
        <waitForElementVisible selector="{{CheckoutCartProductSection.ProductLinkByName($createSimple3Product.name$)}}" stepKey="seeSimple3InCart"/>
        <waitForText userInput="$140.00" selector="{{CheckoutCartSummarySection.subtotal}}" stepKey="verifyInitialCartSubtotal"/>
        <!-- Step 4,5: Open Simple1 product and change price to 15 and Save -->
        <openNewTab stepKey="openAdminTab"/>
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="openSimple1ProductForEdit">
            <argument name="productId" value="$createSimple1Product.id$"/>
        </actionGroup>
        <fillField userInput="15" selector="{{AdminProductFormSection.productPrice}}" stepKey="changeSimple1PriceToFifteen"/>
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveSimple1ProductWithNewPrice"/>
        <!-- Step 6: Open Simple2 product and change Stock Status to Out of Stock and Save -->
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="openSimple2ProductForEdit">
            <argument name="productId" value="$createSimple2Product.id$"/>
        </actionGroup>
        <actionGroup ref="AdminSetStockStatusActionGroup" stepKey="setSimple2OutOfStock">
            <argument name="stockStatus" value="Out of Stock"/>
        </actionGroup>
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveSimple2ProductWithOutOfStock"/>
        <!-- Step 7: Go to Customers > All Customers and open Customer for edit -->
        <actionGroup ref="AdminOpenCustomerEditPageActionGroup" stepKey="openCustomerEditPage">
            <argument name="customerId" value="$createCustomer.id$"/>
        </actionGroup>
        <!-- Step 8: Click Manage Shopping Cart -->
        <click selector="{{AdminCustomerMainActionsSection.manageShoppingCart}}" stepKey="clickManageShoppingCart"/>
        <waitForPageLoad stepKey="waitForManageCartPageLoad"/>
        <!-- Step 9: Change quantity for Simple3 product and Update Items and Quantities -->
        <!-- Set Simple3 qty = 2 and update cart -->
        <actionGroup ref="AdminUpdateProductQtyCustomerManageShoppingCartActionGroup" stepKey="updateSimple3QuantityAndUpdate">
            <argument name="productQty" value="2"/>
            <argument name="productSku" value="$createSimple3Product.sku$"/>
        </actionGroup>
        <!-- Step 10: Go to Stores > Configuration > Customers > Customer Configuration Tab Online Customer Options and change Customer Data Lifetime to 1 -->
        <actionGroup ref="SetCustomerDataLifetimeActionGroup" stepKey="setCustomerDataLifetimeToOneMinute">
            <argument name="minutes" value="1"/>
        </actionGroup>
        <!-- Step 11: Save and Flush cache if required -->
        <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushConfigCache">
            <argument name="tags" value="config"/>
        </actionGroup>
        <!-- Step 12: Go back to Storefront on Shopping Cart page -->
        <switchToPreviousTab stepKey="switchBackToStorefront"/>
        <!-- Step 13: Wait 1 min and refresh page -->
        <wait time="65" stepKey="waitOneMinuteForDataLifetimeExpiration"/>
        <actionGroup ref="ReloadPageActionGroup" stepKey="refreshCartPage"/>
        <waitForPageLoad stepKey="waitForCartPageReload"/>
        <!-- Expected Results Verification -->
        <!-- Mini-Cart has 5 items (1 + 1 + 3) - Simple2 qty should be 1 because it's out of stock -->
        <waitForText userInput="5" selector="{{StorefrontMinicartSection.productCount}}" time="30" stepKey="assertUpdatedMiniCartItemCount"/>
        <!-- Verify Mini-Cart product details -->
        <actionGroup ref="StorefrontClickOnMiniCartActionGroup" stepKey="openUpdatedMiniCart"/>
        <!-- Simple1: qty = 1, price = 15 -->
        <waitForElementVisible selector="{{StorefrontMinicartSection.productLinkByName($createSimple1Product.name$)}}" stepKey="seeUpdatedSimple1InMiniCart"/>
        <seeInField userInput="1" selector="{{StorefrontMinicartSection.itemQuantity($createSimple1Product.name$)}}" stepKey="seeSimple1UpdatedQtyInMiniCart"/>
        <waitForText userInput="$15.00" selector="{{StorefrontMinicartSection.productPriceByName($createSimple1Product.name$)}}" stepKey="seeSimple1UpdatedPriceInMiniCart"/>
        <!-- Simple2: qty = 2, price = 20 (out of stock) -->
        <waitForElementVisible selector="{{StorefrontMinicartSection.productLinkByName($createSimple2Product.name$)}}" stepKey="seeUpdatedSimple2InMiniCart"/>
        <seeInField userInput="2" selector="{{StorefrontMinicartSection.itemQuantity($createSimple2Product.name$)}}" stepKey="seeSimple2UpdatedQtyInMiniCart"/>
        <waitForText userInput="$20.00" selector="{{StorefrontMinicartSection.productPriceByName($createSimple2Product.name$)}}" stepKey="seeSimple2PriceInMiniCart"/>
        <!-- Simple3: qty = 2, price = 30 -->
        <waitForElementVisible selector="{{StorefrontMinicartSection.productLinkByName($createSimple3Product.name$)}}" stepKey="seeUpdatedSimple3InMiniCart"/>
        <seeInField userInput="2" selector="{{StorefrontMinicartSection.itemQuantity($createSimple3Product.name$)}}" stepKey="seeSimple3UpdatedQtyInMiniCart"/>
        <waitForText userInput="$30.00" selector="{{StorefrontMinicartSection.productPriceByName($createSimple3Product.name$)}}" stepKey="seeSimple3PriceInMiniCart"/>
        <!-- Cart Subtotal = 115 (15*1 + 20*2 + 30*2) -->
        <waitForText userInput="$115.00" selector="{{StorefrontMinicartSection.subtotal}}" stepKey="verifyUpdatedMiniCartSubtotal"/>
        <waitForElementNotVisible selector="{{StorefrontMinicartSection.proceedToCheckout}}" stepKey="verifyCheckoutButtonNotVisibleInMiniCart"/>
        <actionGroup ref="StorefrontClickOnMiniCartActionGroup" stepKey="closeUpdatedMiniCart"/>
        <!-- On Shopping Cart page: Verify "Some of the products are out of stock" message -->
        <waitForText userInput="Some of the products are out of stock." selector="{{CheckoutCartMessageSection.errorMessage}}" stepKey="verifyOutOfStockHeaderMessage"/>
        <!-- Verify Simple2 has specific out of stock message -->
        <waitForText userInput="Product $createSimple2Product.name$ is out of stock." selector="{{CheckoutCartProductSection.ProductErrorMessageByName($createSimple2Product.name$)}}" stepKey="verifySimple2OutOfStockMessage"/>
        <!-- Verify all product quantities and prices are updated as in MiniCart -->
        <!-- Simple1: qty = 1, price = 15 -->
        <seeInField userInput="1" selector="{{CheckoutCartProductSection.ProductQuantityByName($createSimple1Product.name$)}}" stepKey="verifySimple1UpdatedQuantity"/>
        <waitForText userInput="$15.00" selector="{{CheckoutCartProductSection.ProductPriceByName($$createSimple1Product.name$$)}}" stepKey="verifySimple1UpdatedPriceInCart"/>
        <!-- Simple2: qty = 2, price = 20 -->
        <seeInField userInput="2" selector="{{CheckoutCartProductSection.ProductQuantityByName($createSimple2Product.name$)}}" stepKey="verifySimple2UpdatedQuantity"/>
        <waitForText userInput="$20.00" selector="{{CheckoutCartProductSection.ProductPriceByName($createSimple2Product.name$)}}" stepKey="verifySimple2PriceInCart"/>
        <!-- Simple3: qty = 2, price = 30 -->
        <seeInField userInput="2" selector="{{CheckoutCartProductSection.ProductQuantityByName($createSimple3Product.name$)}}" stepKey="verifySimple3UpdatedQuantity"/>
        <waitForText userInput="$30.00" selector="{{CheckoutCartProductSection.ProductPriceByName($createSimple3Product.name$)}}" stepKey="verifySimple3PriceInCart"/>
        <!-- Subtotal = 115 -->
        <waitForText userInput="$115.00" selector="{{CheckoutCartSummarySection.subtotal}}" stepKey="verifyFinalCartSubtotal"/>
    </test>
</tests>
