<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright 2024 Adobe
  * All Rights Reserved.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminChangeContentOfWysiwygEditorForDisabledByDefaultTest">
        <annotations>
            <features value="Cms"/>
            <stories value="Apply WYSIWYG Editor configuration for disabled by default"/>
            <title value="Change content of WYSIWYG editor if it's disabled by default"/>
            <description value="Admin should be able to Check WYSIWYG editor content can be changed and saved if it is disabled by default"/>
            <severity value="MAJOR"/>
            <testCaseId value="AC-4143"/>
            <group value="Cms"/>
        </annotations>
        <before>
            <createData entity="testCmsPage" stepKey="createCMSPage"/>
            <createData entity="_defaultBlock" stepKey="createPreReqBlock"/>
            <!-- Simple product is created -->
            <createData entity="_defaultProduct" stepKey="createSimpleProduct"/>
            <createData entity="_defaultCategory" stepKey="createDefaultCategory"/>
            <!-- Login to admin-->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <!-- Remove Image root folder-->
            <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery"/>
            <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandStorageRootFolder">
                <argument name="FolderName" value="Storage Root"/>
            </actionGroup>
            <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandWysiwygFolder">
                <argument name="FolderName" value="wysiwyg"/>
            </actionGroup>
            <actionGroup ref="DeleteFolderActionGroup" stepKey="DeleteCreatedFolder">
                <argument name="ImageFolder" value="ImageFolder"/>
            </actionGroup>
            <actionGroup ref="AdminOpenCMSPagesGridActionGroup" stepKey="amOnEditPage"/>
            <conditionalClick selector="{{CmsPagesPageActionsSection.clearAllButton}}" dependentSelector="{{CmsPagesPageActionsSection.activeFilters}}" stepKey="clickToResetFilter" visible="true"/>
            <waitForPageLoad stepKey="waitForGridReload"/>
            <deleteData createDataKey="createPreReqBlock" stepKey="deletePreReqBlock"/>
            <deleteData createDataKey="createCMSPage" stepKey="deletePreReqCMSPage"/>
            <!-- Set default option to WYSIWYG Editor Configuration-->
            <actionGroup ref="DisabledWYSIWYGActionGroup" stepKey="disableWYSIWYG"/>
            <actionGroup ref="CliMediaGalleryEnhancedEnableActionGroup" stepKey="disableOldMediaGallery">
                <argument name="enabled" value="1"/>
            </actionGroup>
            <deleteData createDataKey="createSimpleProduct" stepKey="deleteSimpleProduct"/>
            <!-- Logout from admin-->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Set WYSIWYG Editor to disabled By Default -->
        <actionGroup ref="NavigateToAdminContentManagementPageActionGroup" stepKey="navigateToCmsConfigPage"/>
        <conditionalClick selector="{{ContentManagementSection.WYSIWYGOptions}}" dependentSelector="{{ContentManagementSection.EnableWYSIWYG}}" visible="false" stepKey="expandWYSIWYGOptionsTab"/>
        <waitForElementVisible selector="{{ContentManagementSection.EnableWYSIWYG}}" stepKey="waitTabToExpand"/>
        <uncheckOption selector="{{ContentManagementSection.EnableSystemValue}}" stepKey="enableEnableSystemValue"/>
        <selectOption selector="{{ContentManagementSection.EnableWYSIWYG}}" userInput="Disabled by Default" stepKey="disableWYSIWYG"/>
        <click selector="{{ContentManagementSection.WYSIWYGOptions}}" stepKey="collapseWYSIWYGOptionsTab"/>
        <click selector="{{ContentManagementSection.Save}}" stepKey="clickSaveConfig"/>
        <magentoCLI command="config:set cms/pagebuilder/enabled 0" stepKey="disablePageBuilder"/>
        <actionGroup ref="CliCacheCleanActionGroup" stepKey="cleanCache">
            <argument name="tags" value=""/>
        </actionGroup>
        <!-- Add content into Category -->
        <actionGroup ref="AdminOpenCategoryPageActionGroup" stepKey="openAdminCategoryIndexPage"/>
        <actionGroup ref="AdminExpandCategoryTreeActionGroup" stepKey="clickOnExpandTree"/>
        <click selector="{{AdminCategorySidebarTreeSection.categoryInTree(_defaultCategory.name)}}" stepKey="selectCreatedCategory"/>
        <waitForPageLoad stepKey="waitForPageToLoaded2"/>
        <!-- Navigate to Content & Click On Show hide button and then Asset WYSIWYG editor for Category-->
        <click selector="{{AdminProductFormSection.contentTab}}" stepKey="clickContentTab"/>
        <conditionalClick selector="{{TinyMCESection.ShowHideBtn}}" dependentSelector="{{TinyMCESection.TinyMCE}}" visible="false" stepKey="toggleShowHiddenForCategory"/>
        <waitForElementVisible selector="{{TinyMCESection.TinyMCE}}" stepKey="waitForTinyMCECategory"/>
        <click selector="{{TinyMCESection.ShowHideBtn}}"  stepKey="toggleShowHiddenForCategory1"/>
        <waitForElementNotVisible selector="{{TinyMCESection.TinyMCE}}" stepKey="waitForTinyMCECategory1"/>
        <click selector="{{TinyMCESection.ShowHideBtn}}"  stepKey="toggleShowHiddenForCategory2"/>
        <waitForElementVisible selector="{{TinyMCESection.TinyMCE}}" stepKey="waitForTinyMCECategory2"/>
        <!-- Verify Content Description By Adding Text into It -->
        <executeJS function="tinyMCE.get('category_form_description').setContent('%Hello Category World!');" stepKey="executeJSFillContent"/>
        <click selector="{{TinyMCESection.ShowHideBtn}}" stepKey="clickOnShowHideEditorBtn"/>
        <!-- Verify Content Description By inserting Image -->
        <actionGroup ref="AdminOpenMediaGalleryFromPageNoEditorActionGroup" stepKey="openMediaGalleryForPage"/>
        <actionGroup ref="ResetAdminDataGridToDefaultViewActionGroup" stepKey="clearFilter"/>
        <actionGroup ref="AdminMediaGalleryFolderSelectActionGroup" stepKey="selectWysiwygFolder">
            <argument name="name" value="wysiwyg"/>
        </actionGroup>
        <actionGroup ref="AdminMediaGalleryOpenNewFolderFormActionGroup" stepKey="openNewFolderForm"/>
        <actionGroup ref="AdminMediaGalleryCreateNewFolderActionGroup" stepKey="createNewFolder">
            <argument name="name" value="{{AdminMediaGalleryFolderData.name}}"/>
        </actionGroup>
        <actionGroup ref="AdminEnhancedMediaGalleryUploadImageActionGroup" stepKey="uploadImage">
            <argument name="image" value="ImageUpload3"/>
        </actionGroup>
        <actionGroup ref="AdminMediaGalleryClickImageInGridActionGroup" stepKey="selectContentImageInGrid">
            <argument name="imageName" value="{{ImageMetadata.title}}"/>
        </actionGroup>
        <actionGroup ref="AdminMediaGalleryClickAddSelectedActionGroup" stepKey="clickAddSelectedContentImage"/>
        <actionGroup ref="AdminSaveCategoryActionGroup" stepKey="saveCatalog"/>
        <actionGroup ref="StorefrontNavigateCategoryPageActionGroup" stepKey="navigateToCategoryPage2">
            <argument name="category" value="$$createDefaultCategory$$"/>
        </actionGroup>
        <waitForPageLoad stepKey="waitForCategoryPageLoad"/>
        <waitForElementVisible selector="{{TinyMCESection.imageSource(ImageUpload3.fileName)}}" stepKey="assertMediaSourceCategoryDescription"/>
        <!-- Assert Content Description In Storefront (Image and Text) -->
        <waitForText userInput="%Hello Category World!" selector="{{StorefrontCategoryMainSection.CatalogDescription}}" stepKey="assertCatalogDescription"/>
        <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery2"/>
        <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandWysiwygFolder2">
            <argument name="FolderName" value="wysiwyg"/>
        </actionGroup>
        <actionGroup ref="AdminMediaGalleryFolderSelectActionGroup" stepKey="select1stCreatedFolder2">
            <argument name="name" value="{{AdminMediaGalleryFolderData.name}}"/>
        </actionGroup>
        <actionGroup ref="AdminMediaGalleryFolderDeleteActionGroup" stepKey="delete1stCreatedFolder2"/>
        <!-- Add content into Product -->
        <actionGroup ref="SearchForProductOnBackendActionGroup" stepKey="searchForSimpleProduct">
            <argument name="product" value="$$createSimpleProduct$$"/>
        </actionGroup>
        <actionGroup ref="OpenEditProductOnBackendActionGroup" stepKey="openSimpleProduct">
            <argument name="product" value="$$createSimpleProduct$$"/>
        </actionGroup>
        <!-- Navigate to Content & Click On Show hide button and then Asset WYSIWYG editor for Product-->
        <waitForElementClickable selector="{{AdminProductFormSection.contentTab}}" stepKey="waitToClickContentTab"/>
        <click selector="{{AdminProductFormSection.contentTab}}" stepKey="clickContentTabForProduct"/>
        <waitForPageLoad stepKey="waitForGridLoad2"/>
        <click selector="{{TinyMCESection.ShowHideBtn}}" stepKey="clickShowHideBtnAgain"/>
        <waitForElementVisible selector="{{ProductShortDescriptionWysiwygSection.form}} {{TinyMCESection.TinyMCE}}" stepKey="waitForTinyMCEToBeVisible"/>
        <click selector="{{ProductShortDescriptionWysiwygSection.form}} {{TinyMCESection.ShowHideBtn}}" stepKey="focusProductShortDescriptionWysiwyg1"/>
        <waitForElementNotVisible selector="{{ProductShortDescriptionWysiwygSection.form}} {{TinyMCESection.TinyMCE}}" stepKey="waitForShortDescription1"/>
        <click selector="{{ProductShortDescriptionWysiwygSection.form}} {{TinyMCESection.ShowHideBtn}}" stepKey="clickAgainShowHideBtn2"/>
        <click selector="{{ProductShortDescriptionWysiwygSection.form}} {{TinyMCESection.EditArea}}" stepKey="focusProductShortDescriptionWysiwyg2"/>
        <waitForElementVisible selector="{{ProductShortDescriptionWysiwygSection.form}} {{TinyMCESection.TinyMCE}}" stepKey="waitForShortDescription2"/>
        <!-- Verify Product Content ShortDescription By Adding Text into It -->
        <executeJS function="tinyMCE.get('product_form_short_description').setContent('%Hello World! Short Content');" stepKey="executeJSFillContent2"/>
        <scrollTo selector="{{ProductDescriptionWysiwygSection.form}} {{TinyMCESection.ShowHideBtn}}" stepKey="scrollToDesShowHideBtn1"/>
        <conditionalClick selector="{{TinyMCESection.ShowHideBtn}}" dependentSelector="{{TinyMCESection.TinyMCE}}" visible="false" stepKey="clickShowHideEditorBtn1"/>
        <actionGroup ref="AdminProductFormSaveActionGroup" stepKey="saveProductAgain"/>
        <conditionalClick selector="{{CmsNewPagePageContentSection.header}}" dependentSelector="{{CmsNewPagePageContentSection.contentHeading}}" visible="false" stepKey="clickExpandContent1"/>
        <waitForElementVisible selector="{{ProductShortDescriptionWysiwygSection.form}} {{TinyMCESection.InsertImageBtn}}" stepKey="waitForInsertImageButton1"/>
        <click selector="{{ProductShortDescriptionWysiwygSection.form}} {{TinyMCESection.InsertImageBtn}}" stepKey="clickInsertImage1"/>
        <!--Verify Product Content Short Description By inserting Image -->
        <waitForPageLoad stepKey="waitForMediaGalleryInitialLoad1"/>
        <actionGroup ref="ResetAdminDataGridToDefaultViewActionGroup" stepKey="resetToDefaultView1"/>
        <actionGroup ref="AdminMediaGalleryFolderSelectActionGroup" stepKey="selectWysiwygFolder1">
            <argument name="name" value="wysiwyg"/>
        </actionGroup>
        <actionGroup ref="AdminMediaGalleryOpenNewFolderFormActionGroup" stepKey="openNewFolderForm1"/>
        <actionGroup ref="AdminMediaGalleryCreateNewFolderActionGroup" stepKey="createNewFolder1">
            <argument name="name" value="{{AdminMediaGalleryFolderData.name}}"/>
        </actionGroup>
        <actionGroup ref="AdminEnhancedMediaGalleryUploadImageActionGroup" stepKey="uploadImage1">
            <argument name="image" value="ImageUpload3"/>
        </actionGroup>
        <actionGroup ref="AdminMediaGalleryClickImageInGridActionGroup" stepKey="selectContentImageInGrid1">
            <argument name="imageName" value="{{ImageMetadata.title}}"/>
        </actionGroup>
        <actionGroup ref="AdminMediaGalleryClickAddSelectedActionGroup" stepKey="clickAddSelectedContentImage1"/>
        <actionGroup ref="AdminProductFormSaveActionGroup" stepKey="saveProduct1"/>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex1">
            <argument name="indices" value=""/>
        </actionGroup>
        <actionGroup ref="CliCacheCleanActionGroup" stepKey="flushCache1">
            <argument name="tags" value=""/>
        </actionGroup>
        <!-- Verify the Text and Image in Product short description -->
        <actionGroup ref="OpenStoreFrontProductPageActionGroup" stepKey="goBackToProductPage">
            <argument name="productUrlKey" value="$$createSimpleProduct.custom_attributes[url_key]$$"/>
        </actionGroup>
        <waitForElementVisible selector="{{TinyMCESection.imageSource(ImageUpload3.fileName)}}" stepKey="assertMediaSourceItemShortDescription"/>
        <waitForText userInput="%Hello World! Short Content" selector="{{StorefrontProductInfoMainSection.productShortDescription}}" stepKey="assertProductShortDescription"/>
        <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToProductMediaGallery"/>
        <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandWysiwygFolder3">
            <argument name="FolderName" value="wysiwyg"/>
        </actionGroup>
        <actionGroup ref="AdminMediaGalleryFolderSelectActionGroup" stepKey="select1stCreatedFolder">
            <argument name="name" value="{{AdminMediaGalleryFolderData.name}}"/>
        </actionGroup>
        <actionGroup ref="AdminMediaGalleryFolderDeleteActionGroup" stepKey="delete1stCreatedFolder"/>
        <!-- Add content into Product -->
        <actionGroup ref="SearchForProductOnBackendActionGroup" stepKey="searchForSimpleProduct1">
            <argument name="product" value="$$createSimpleProduct$$"/>
        </actionGroup>
        <actionGroup ref="OpenEditProductOnBackendActionGroup" stepKey="openEditProduct">
            <argument name="product" value="$$createSimpleProduct$$"/>
        </actionGroup>
        <!-- Navigate to Content & Click On Show hide button and then Asset WYSIWYG editor for Product-->
        <waitForElementClickable selector="{{AdminProductFormSection.contentTab}}" stepKey="waitToClickContentTab1"/>
        <click selector="{{AdminProductFormSection.contentTab}}" stepKey="clickContentTabForProduct1"/>
        <waitForElementNotVisible selector="{{ProductDescriptionWysiwygSection.form}} {{TinyMCESection.TinyMCE}}" stepKey="waitForDescription1"/>
        <waitForElementClickable selector="{{TinyMCESection.ShowHideBtn}}" stepKey="seeShowHideBtn1"/>
        <click selector="{{TinyMCESection.ShowHideBtn}}"  stepKey="clickShowHideBtn1"/>
        <waitForElementVisible selector="{{TinyMCESection.TinyMCE}}" stepKey="assertWYSIWYGEditorToBeVisible1"/>
        <click selector=" {{TinyMCESection.ShowHideBtn}}" stepKey="clickShowEditor1"/>
        <waitForElementNotVisible selector="{{TinyMCESection.TinyMCE}}" stepKey="assertWYSIWYGEditorNotToBeVisible1"/>
        <conditionalClick selector="{{TinyMCESection.ShowHideBtn}}" dependentSelector="{{TinyMCESection.TinyMCE}}" visible="false" stepKey="clickAgainShowHideBtn1"/>
        <waitForElementVisible selector="{{TinyMCESection.TinyMCE}}" stepKey="assertAgainWYSIWYGEditorToBeVisible1"/>
        <!-- Adding Text for content into Product description -->
        <actionGroup ref="AdminOpenContentSectionOnProductPageActionGroup" stepKey="openDescriptionDropDown1"/>
        <actionGroup ref="AdminFillInProductDescriptionActionGroup" stepKey="fillLongDescription">
            <argument name="description" value="%Hello Test World!"/>
        </actionGroup>
        <actionGroup ref="AdminProductFormSaveActionGroup" stepKey="saveSimpleProductAgain"/>
        <conditionalClick selector="{{CmsNewPagePageContentSection.header}}" dependentSelector="{{CmsNewPagePageContentSection.contentHeading}}" visible="false" stepKey="clickExpandContent2"/>
        <waitForElementVisible selector="{{ProductDescriptionWysiwygSection.form}} {{TinyMCESection.InsertImageBtn}}" stepKey="waitForInsertImageButton2"/>
        <click selector="{{ProductDescriptionWysiwygSection.form}} {{TinyMCESection.InsertImageBtn}}" stepKey="clickInsertImage2"/>
        <!-- Inserting Image into Product Description -->
        <waitForPageLoad stepKey="waitForMediaGalleryLoad"/>
        <actionGroup ref="ResetAdminDataGridToDefaultViewActionGroup" stepKey="resetToDefaultView2"/>
        <actionGroup ref="AdminMediaGalleryFolderSelectActionGroup" stepKey="selectWysiwygFolder2">
            <argument name="name" value="wysiwyg"/>
        </actionGroup>
        <actionGroup ref="AdminMediaGalleryOpenNewFolderFormActionGroup" stepKey="openNewFolderForm2"/>
        <actionGroup ref="AdminMediaGalleryCreateNewFolderActionGroup" stepKey="createNewFolder2">
            <argument name="name" value="{{AdminMediaGalleryFolderData.name}}"/>
        </actionGroup>
        <actionGroup ref="AdminEnhancedMediaGalleryUploadImageActionGroup" stepKey="uploadImage2">
            <argument name="image" value="ImageUpload3"/>
        </actionGroup>
        <actionGroup ref="AdminMediaGalleryClickImageInGridActionGroup" stepKey="selectContentImageInGrid2">
            <argument name="imageName" value="{{ImageMetadata.title}}"/>
        </actionGroup>
        <actionGroup ref="AdminMediaGalleryClickAddSelectedActionGroup" stepKey="clickAddSelectedContentImage2"/>
        <actionGroup ref="AdminProductFormSaveActionGroup" stepKey="saveProduct3"/>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex2">
            <argument name="indices" value=""/>
        </actionGroup>
        <actionGroup ref="CliCacheCleanActionGroup" stepKey="flushCache2">
            <argument name="tags" value=""/>
        </actionGroup>
        <!-- Verify the Text and Image in Product description -->
        <actionGroup ref="OpenStoreFrontProductPageActionGroup" stepKey="goToProductPage">
            <argument name="productUrlKey" value="$$createSimpleProduct.custom_attributes[url_key]$$"/>
        </actionGroup>
        <waitForElementVisible selector="{{TinyMCESection.imageSource(ImageUpload3.fileName)}}" stepKey="assertMediaSourceItemDescription"/>
        <waitForText userInput="%Hello Test World!" selector="{{StorefrontProductInfoMainSection.productDescription}}" stepKey="assertProductDescription"/>
        <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery1"/>
        <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandWysiwygFolder1">
            <argument name="FolderName" value="wysiwyg"/>
        </actionGroup>
        <actionGroup ref="AdminMediaGalleryFolderSelectActionGroup" stepKey="select1stCreatedFolder1">
            <argument name="name" value="{{AdminMediaGalleryFolderData.name}}"/>
        </actionGroup>
        <actionGroup ref="AdminMediaGalleryFolderDeleteActionGroup" stepKey="delete1stCreatedFolder1"/>
        <!-- Add content into News Letter -->
        <actionGroup ref="CliMediaGalleryEnhancedEnableActionGroup" stepKey="enableOldMediaGallery">
            <argument name="enabled" value="0"/>
        </actionGroup>
        <!--Create a newsletter template that contains an image-->
        <amOnPage url="{{NewsletterTemplateForm.url}}" stepKey="amOnNewsletterTemplatePage"/>
        <waitForPageLoad stepKey="waitForNewsLetterPageLoad1"/>
        <fillField selector="{{BasicFieldNewsletterSection.templateName}}" userInput="{{_defaultNewsletter.name}}" stepKey="fillTemplateName"/>
        <fillField selector="{{BasicFieldNewsletterSection.templateSubject}}" userInput="{{_defaultNewsletter.subject}}" stepKey="fillTemplateSubject"/>
        <fillField selector="{{BasicFieldNewsletterSection.senderName}}" userInput="{{_defaultNewsletter.senderName}}" stepKey="fillSenderName"/>
        <fillField selector="{{BasicFieldNewsletterSection.senderEmail}}" userInput="{{_defaultNewsletter.senderEmail}}" stepKey="fillSenderEmail"/>
        <!-- Navigate to Template & Click On Show hide button and then Asset WYSIWYG editor for Newsletter-->
        <conditionalClick selector="{{TinyMCESection.ShowHideBtn}}" dependentSelector="{{TinyMCESection.TinyMCE}}" visible="false" stepKey="toggleEditorIfHidden"/>
        <waitForElementVisible selector="{{TinyMCESection.TinyMCE}}" stepKey="waitForTinyMCEToBeDisplayed"/>
        <conditionalClick selector="{{TinyMCESection.ShowHideBtn}}" dependentSelector="{{TinyMCESection.TinyMCE}}" visible="false" stepKey="toggleEditorIfNotHidden"/>
        <waitForElementVisible selector="{{TinyMCESection.TinyMCE}}" stepKey="waitForTinyMCENotToBeDisplayed"/>
        <conditionalClick selector="{{TinyMCESection.ShowHideBtn}}" dependentSelector="{{TinyMCESection.TinyMCE}}" visible="false" stepKey="toggleEditorAgainIfHidden"/>
        <waitForElementVisible selector="{{TinyMCESection.TinyMCE}}" stepKey="waitForTinyMCEAgainDisplayed"/>
        <!-- Adding Text for content into Newsletter description -->
        <executeJS function="tinyMCE.get('text').setContent('%Hello World From Newsletter Template');" stepKey="executeJSFillContentForNewsletter"/>
        <!-- Inserting Image for content into Newsletter description -->
        <click selector="{{TinyMCESection.InsertImageIcon}}" stepKey="clickInsertImageIcon"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <actionGroup ref="ClickBrowseBtnOnUploadPopupActionGroup" stepKey="clickBrowserBtn"/>
        <actionGroup ref="VerifyMediaGalleryStorageActionsActionGroup" stepKey="VerifyMediaGalleryStorageBtn"/>
        <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandStorageRootFolder">
            <argument name="FolderName" value="Storage Root"/>
        </actionGroup>
        <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="navigateToWysiwygFolder">
            <argument name="FolderName" value="wysiwyg"/>
        </actionGroup>
        <actionGroup ref="CreateImageFolderActionGroup" stepKey="CreateImageFolder">
            <argument name="ImageFolder" value="ImageFolder"/>
        </actionGroup>
        <actionGroup ref="AttachImageActionGroup" stepKey="attachImage1">
            <argument name="Image" value="ImageUpload3"/>
        </actionGroup>
        <actionGroup ref="SaveImageActionGroup" stepKey="insertImage"/>
        <actionGroup ref="FillOutUploadImagePopupActionGroup" stepKey="fillOutUploadImagePopup"/>
        <click selector="{{BasicFieldNewsletterSection.save}}" stepKey="clickSaveTemplate"/>
        <waitForPageLoad stepKey="waitForPageLoad10"/>
        <!--Preview the newsletter template-->
        <fillField selector="{{BasicFieldNewsletterSection.searchInput}}" userInput="{{_defaultNewsletter.name}}" stepKey="fillSearch"/>
        <click selector="{{BasicFieldNewsletterSection.searchButton}}" stepKey="clickSearch"/>
        <waitForPageLoad stepKey="waitForPageLoad11"/>
        <click selector="{{AdminNewsletterGridMainActionsSection.Preview(_defaultNewsletter.name)}}" stepKey="clickPreview"/>
        <switchToWindow stepKey="switchToWindow" userInput="action_window"/>
        <actionGroup ref="SwitchToPreviewIframeActionGroup" stepKey="switchToIframe"/>
        <!--Verify that the text and image are present For NewsLetter-->
        <waitForText userInput="%Hello World From Newsletter Template" stepKey="waitForPageLoad3"/>
        <waitForElementVisible selector="{{StorefrontNewsletterSection.imageSource(ImageUpload3.fileName)}}" stepKey="assertMediaSource"/>
        <closeTab stepKey="closeTab"/>
        <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery"/>
        <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandStorageRootFolder2">
            <argument name="FolderName" value="Storage Root"/>
        </actionGroup>
        <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandWysiwygFolder">
            <argument name="FolderName" value="wysiwyg"/>
        </actionGroup>
        <actionGroup ref="DeleteFolderActionGroup" stepKey="DeleteCreatedFolder">
            <argument name="ImageFolder" value="ImageFolder"/>
        </actionGroup>
        <!-- Add content into CMS Page -->
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage1">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <!-- Navigate to Content & Click On Show hide button and then Asset WYSIWYG editor for CMS Page-->
        <click selector="{{CmsNewPagePageContentSection.header}}" stepKey="clickOnExpandContent"/>
        <conditionalClick selector="{{TinyMCESection.ShowHideBtn}}" dependentSelector="{{TinyMCESection.TinyMCE}}" visible="false"  stepKey="clickShowHiddenForCMSPage"/>
        <waitForElementVisible selector="{{TinyMCESection.TinyMCE}}" stepKey="waitForTinyMCE1"/>
        <click selector="{{TinyMCESection.ShowHideBtn}}" stepKey="toggleShowHiddenForCMSPage"/>
        <waitForElementNotVisible selector="{{TinyMCESection.TinyMCE}}" stepKey="waitForTinyMCENotDisplayedInCMSPage"/>
        <conditionalClick selector="{{TinyMCESection.ShowHideBtn}}" dependentSelector="{{TinyMCESection.TinyMCE}}" visible="false" stepKey="toggleShowHiddenForCMSPageAgain"/>
        <waitForElementVisible selector="{{TinyMCESection.TinyMCE}}" stepKey="waitForTinyMCEDisplayInCMSPage"/>
        <!-- Adding Text for content into CMS Page description -->
        <executeJS function="tinyMCE.get('cms_page_form_content').setContent('%Hello CMS World!');" stepKey="executeJSFillCmsContent"/>
        <click selector="{{TinyMCESection.ShowHideBtn}}" stepKey="clickShowHideBtn"/>
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <conditionalClick selector="{{CmsNewPagePageContentSection.header}}" dependentSelector="{{CmsNewPagePageContentSection.contentHeading}}" visible="false" stepKey="clickExpandContent"/>
        <conditionalClick selector="{{TinyMCESection.ShowHideBtn}}" dependentSelector="{{TinyMCESection.TinyMCE}}" visible="false" stepKey="toggleShowHiddenForCMSPage4"/>
        <waitForElementVisible selector="{{TinyMCESection.TinyMCE}}" stepKey="waitForTinyMCE"/>
        <click selector="{{TinyMCESection.InsertImageIcon}}" stepKey="clickInsertImageBtn"/>
        <waitForPageLoad stepKey="waitForCMSPageLoad"/>
        <actionGroup ref="ClickBrowseBtnOnUploadPopupActionGroup" stepKey="clickOnBrowserBtn"/>
        <actionGroup ref="VerifyMediaGalleryStorageActionsActionGroup" stepKey="assertMediaGalleryStorageBtn"/>
        <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandStorageRootFolder3">
            <argument name="FolderName" value="Storage Root"/>
        </actionGroup>
        <!-- Inserting Image for content into CMS Page description -->
        <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="navigateToWysiwygFolder2">
            <argument name="FolderName" value="wysiwyg"/>
        </actionGroup>
        <actionGroup ref="CreateImageFolderActionGroup" stepKey="CreateImageFolder2">
            <argument name="ImageFolder" value="ImageFolder"/>
        </actionGroup>
        <actionGroup ref="AttachImageActionGroup" stepKey="attachImage4">
            <argument name="Image" value="ImageUpload3"/>
        </actionGroup>
        <actionGroup ref="DeleteImageActionGroup" stepKey="deleteImage"/>
        <actionGroup ref="AttachImageActionGroup" stepKey="attachImage3">
            <argument name="Image" value="ImageUpload3"/>
        </actionGroup>
        <actionGroup ref="SaveImageActionGroup" stepKey="insertImage3"/>
        <actionGroup ref="FillOutUploadImagePopupActionGroup" stepKey="fillOutUploadImagePopup2"/>
        <click selector="{{CmsNewPagePageSeoSection.header}}" stepKey="clickExpandSearchEngineOptimisation"/>
        <fillField selector="{{CmsNewPagePageSeoSection.urlKey}}" userInput="$$createCMSPage.identifier$$" stepKey="fillFieldUrlKey"/>
        <actionGroup ref="SaveCmsPageActionGroup" stepKey="clickSavePage"/>
        <amOnPage url="$$createCMSPage.identifier$$" stepKey="amOnPageTestPage"/>
        <waitForPageLoad  stepKey="wait4"/>
        <!--Verify that the text and image are present For CMS Page-->
        <waitForText userInput="%Hello CMS World" stepKey="seeCmsContent"/>
        <waitForElementVisible selector="{{StorefrontCMSPageSection.imageSource(ImageUpload3.fileName)}}" stepKey="assertMediaSource2"/>
        <!--Code Section To Delete ImageFolder-->
        <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery3"/>
        <!--Expand Media Gallery Folder-->
        <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandStorageRootFolder4">
            <argument name="FolderName" value="Storage Root"/>
        </actionGroup>
        <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandWysiwygFolder4">
            <argument name="FolderName" value="wysiwyg"/>
        </actionGroup>
        <!--Delete Folder From Media Gallery -->
        <actionGroup ref="DeleteFolderActionGroup" stepKey="DeleteFolderFromMediaGallery1">
            <argument name="Image" value="{{ImageFolder.name}}"/>
        </actionGroup>
        <!-- Add content into CMS Block -->
        <actionGroup ref="CliMediaGalleryEnhancedEnableActionGroup" stepKey="enableOldMediaGallery1">
            <argument name="enabled" value="0"/>
        </actionGroup>
        <actionGroup ref="AdminAssertWysiwygEditorActionGroup" stepKey="assignBlockToCMSPage">
            <argument name="Block" value="$$createPreReqBlock$$"/>
            <argument name="CmsPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="NavigateToCreatedCMSBlockPageActionGroup" stepKey="navigateToCreatedCMSBlockPage1">
            <argument name="CMSBlockPage" value="$$createPreReqBlock$$"/>
        </actionGroup>
        <selectOption selector="{{BlockNewPageBasicFieldsSection.storeView}}" userInput="All Store View" stepKey="selectAllStoreView"/>
        <!-- Navigate to Content & Click On Show hide button and then Asset WYSIWYG editor for Block-->
        <conditionalClick selector="{{TinyMCESection.ShowHideBtn}}" dependentSelector="{{TinyMCESection.TinyMCE}}" visible="false" stepKey="clickShowEditorBtn3"/>
        <waitForElementVisible selector="{{TinyMCESection.TinyMCE}}" stepKey="waitForTinyMCEToBeAppear"/>
        <conditionalClick selector="{{TinyMCESection.ShowHideBtn}}" dependentSelector="{{TinyMCESection.TinyMCE}}" visible="true" stepKey="clickShowEditorBtn4"/>
        <waitForElementNotVisible selector="{{TinyMCESection.TinyMCE}}" stepKey="waitForTinyMCENotToBeAppear"/>
        <conditionalClick selector="{{TinyMCESection.ShowHideBtn}}" dependentSelector="{{TinyMCESection.TinyMCE}}" visible="false"  stepKey="clickShowEditorBtn5"/>
        <waitForElementVisible selector="{{TinyMCESection.TinyMCE}}" stepKey="waitForTinyMCE5"/>
        <!-- Adding Text for content into CMS Block description -->
        <executeJS function="tinyMCE.get('cms_block_form_content').setContent('%Hello CMS Block Page');" stepKey="executeJSFillContentForBlock"/>
        <!-- Inserting Image for content into CMS Block description -->
        <click selector="{{TinyMCESection.InsertImageIcon}}" stepKey="clickInsertImageIcon1"/>
        <waitForPageLoad stepKey="waitForPageLoad4"/>
        <actionGroup ref="ClickBrowseBtnOnUploadPopupActionGroup" stepKey="clickBrowserBtn1"/>
        <actionGroup ref="VerifyMediaGalleryStorageActionsActionGroup" stepKey="VerifyMediaGalleryStorageBtn1"/>
        <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandStorageRootFolder1">
            <argument name="FolderName" value="Storage Root"/>
        </actionGroup>
        <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="navigateToWysiwygFolder1">
            <argument name="FolderName" value="wysiwyg"/>
        </actionGroup>
        <actionGroup ref="CreateImageFolderActionGroup" stepKey="CreateImageFolder1">
            <argument name="ImageFolder" value="ImageFolder"/>
        </actionGroup>
        <actionGroup ref="AttachImageActionGroup" stepKey="attachImage">
            <argument name="Image" value="ImageUpload3"/>
        </actionGroup>
        <actionGroup ref="DeleteImageActionGroup" stepKey="deleteImage1"/>
        <actionGroup ref="AttachImageActionGroup" stepKey="attachImage2">
            <argument name="Image" value="ImageUpload3"/>
        </actionGroup>
        <actionGroup ref="SaveImageActionGroup" stepKey="insertImage1"/>
        <actionGroup ref="FillOutUploadImagePopupActionGroup" stepKey="fillOutUploadImagePopup1"/>
        <click selector="{{BlockNewPagePageActionsSection.saveBlock}}" stepKey="clickSaveBlock"/>
        <amOnPage url="$$createCMSPage.identifier$$" stepKey="amOnCMSTestPage"/>
        <waitForPageLoad stepKey="waitForPageBlockLoad"/>
        <!--Verify Text & Image on Storefront-->
        <waitForText userInput="%Hello CMS Block Page" stepKey="seeContentForCMSBlock"/>
        <waitForElementVisible selector="{{StorefrontCMSPageSection.imageSource(ImageUpload3.fileName)}}" stepKey="assertMediaSource1"/>
    </test>
</tests>
