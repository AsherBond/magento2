<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Copyright 2025 Adobe
 * All Rights Reserved.
 */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test  name="StorefrontVerifyUrlKeyForSpecifiedStoreTest">
        <annotations>
            <features value="Catalog"/>
            <stories value="Update category on store view level"/>
            <title value="Check Categories URL Path in multi-store On Storefront"/>
            <description value="Admin updates category, URL key with custom store view and default store view"/>
            <severity value="MAJOR"/>
            <testCaseId value="AC-5109"/>
            <group value="Catalog"/>
        </annotations>
        <before>
            <!-- Precondition Step 2:Use Categories Path for Product URLs: Yes -->
            <actionGroup ref="AdminEnableCategoryPathForProductUrlActionGroup" stepKey="enableCategoriesPathForProductUrls"/>
            <!-- Precondition Step 3:Create an additional root category with a sub category -->
            <createData entity="NewRootCategory" stepKey="createRootCategory"/>
            <createData entity="SimpleRootSubCategory" stepKey="createTestCategory">
                <requiredEntity createDataKey="createRootCategory"/>
            </createData>
            <createData entity="Two_nested_categories" stepKey="createSubTestCategory">
                <requiredEntity createDataKey="createTestCategory"/>
            </createData>
            <!-- Precondition Step 4:Create 1 additional store view including default store view -->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="CreateCustomStoreActionGroup" stepKey="createCustomStore">
                <argument name="website" value="Main Website"/>
                <argument name="store" value="{{customStoreGroup.name}}"/>
                <argument name="rootCategory" value="$$createRootCategory.name$$"/>
            </actionGroup>
            <actionGroup ref="AdminCreateStoreViewActionGroup" stepKey="createCustomStoreView">
                <argument name="StoreGroup" value="customStoreGroup"/>
                <argument name="customStore" value="storeViewData"/>
            </actionGroup>
            <actionGroup ref="AdminCreateStoreViewActionGroup" stepKey="createAnotherCustomStoreView">
                <argument name="StoreGroup" value="customStoreGroup"/>
                <argument name="customStore" value="NewStoreViewData"/>
            </actionGroup>
            <actionGroup ref="AdminChangeWebsiteDefaultStoreActionGroup" stepKey="changeDefaultStoreToCustomStore">
                <argument name="website" value="Main Website"/>
                <argument name="storeGroupName" value="{{customStoreGroup.name}}"/>
                <argument name="defaultStoreName" value="{{customStoreGroup.name}}"/>
            </actionGroup>
        </before>
        <after>
            <!-- Disable Category path for product url -->
            <actionGroup ref="AdminDisableCategoryPathForProductUrlActionGroup" stepKey="disableCategoriesPathForProductUrls"/>
            <actionGroup ref="DeleteCustomStoreActionGroup" stepKey="deleteStore">
                <argument name="storeGroupName" value="customStoreGroup.name"/>
            </actionGroup>
            <deleteData createDataKey="createSubTestCategory" stepKey="deleteSubCategory"/>
            <deleteData createDataKey="createTestCategory" stepKey="deleteMainCategory"/>
            <deleteData createDataKey="createRootCategory" stepKey="deleteParentCategory"/>
            <!-- Logout from admin -->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Step 1,2&3:Switch To Default Store view For root category and Click On Ok Button-->
        <actionGroup ref="SwitchCategoryStoreViewActionGroup" stepKey="switchStoreView">
            <argument name="Store" value="storeViewData.name"/>
            <argument name="CatName" value="NewRootCategory.name"/>
        </actionGroup>
        <!-- Step 4:Update data for root category under default store view scope -->
        <waitForElementClickable selector="{{AdminCategorySidebarTreeSection.expandAll}}" stepKey="waitToClickOnExpandTree"/>
        <actionGroup ref="AdminExpandCategoryTreeActionGroup" stepKey="clickOnExpandTree"/>
        <actionGroup ref="AdminCategoriesOpenCategoryActionGroup" stepKey="selectCategory">
            <argument name="category" value="$$createTestCategory$$"/>
        </actionGroup>
        <actionGroup ref="ChangeSeoUrlKeyForSubCategoryActionGroup" stepKey="updateUrlKeyForCategory">
            <argument name="value" value="{{CustomizedCategory.name}}"/>
        </actionGroup>
        <!-- Step 5&6:Switch To custom store view scope for root category and Click On Ok Button -->
        <actionGroup ref="SwitchToTheNewStoreViewActionGroup" stepKey="switchToStoreView">
            <argument name="storeViewName" value="{{NewStoreViewData.name}}"/>
        </actionGroup>
        <!-- Step 7:Update data for root category under custom store view scope -->
        <waitForElementClickable selector="{{AdminCategorySEOSection.SectionHeader}}" stepKey="waitToBeClickOpenSeoSection"/>
        <actionGroup ref="ChangeSeoUrlKeyForSubCategoryActionGroup" stepKey="changeSeoUrlKeyForSubCategoryCustomStore">
            <argument name="value" value="{{CustomizedCategory.value}}"/>
        </actionGroup>
        <!-- Step 8&9:Switch To default store view scope for sub category and Click On Ok Button -->
        <actionGroup ref="AdminExpandCategoryTreeActionGroup" stepKey="clickOnExpand"/>
        <actionGroup ref="AdminCategoriesOpenCategoryActionGroup" stepKey="selectSubCategoryTree">
            <argument name="category" value="$$createSubTestCategory$$"/>
        </actionGroup>
        <actionGroup ref="SwitchToTheNewStoreViewActionGroup" stepKey="switchDefaultStoreView">
            <argument name="storeViewName" value="{{storeViewData.name}}"/>
        </actionGroup>
        <!-- Step 10:Update data for sub category under default store view scope -->
        <actionGroup ref="ChangeSeoUrlKeyForSubCategoryActionGroup" stepKey="updateUrlKeyForSubCategoryCustomStore">
            <argument name="value" value="{{CustomizedCategory.path}}"/>
        </actionGroup>
        <!-- Step 11&12:Switch To custom store view scope for sub category and Click On Ok Button -->
        <actionGroup ref="SwitchToTheNewStoreViewActionGroup" stepKey="switchNewStoreView">
            <argument name="storeViewName" value="{{NewStoreViewData.name}}"/>
        </actionGroup>
        <!-- Step 13:Update data for root category under custom store view scope -->
        <waitForElementClickable selector="{{AdminCategorySEOSection.SectionHeader}}" stepKey="waitToClickOpenSeoSection"/>
        <actionGroup ref="ChangeSeoUrlKeyForSubCategoryActionGroup" stepKey="changeUrlKeyForSubCategoryCustomizedStore">
            <argument name="value" value="{{CustomizedCategory.urlKey}}"/>
        </actionGroup>
        <actionGroup ref="CliCacheCleanActionGroup" stepKey="cleanCache">
            <argument name="tags" value=""/>
        </actionGroup>
        <actionGroup ref="StorefrontOpenHomePageActionGroup" stepKey="openHomePage"/>
        <!-- Step 14&15:Go To Storefront and Switch to default store view for root category & Open root category on Storefront under default store view -->
        <actionGroup ref="StorefrontGoToCategoryPageActionGroup" stepKey="openRootCategoryPage">
            <argument name="categoryName" value="$$createTestCategory.name$$"/>
        </actionGroup>
        <actionGroup ref="StorefrontAssertProperUrlIsShownActionGroup" stepKey="assertUpdatedUrlKey">
            <argument name="urlPath" value="{{CustomizedCategory.name}}.html"/>
        </actionGroup>
        <!-- Step 16:Open subcategory for default store view -->
        <actionGroup ref="StorefrontGoToSubCategoryPageActionGroup" stepKey="navigateToSubCategoryPage">
            <argument name="categoryName" value="$$createTestCategory.name$$"/>
            <argument name="subCategoryName" value="$$createSubTestCategory.name$$"/>
        </actionGroup>
        <!-- Step 17:Verify url for subcategory for default store view -->
        <actionGroup ref="StorefrontAssertProperUrlIsShownActionGroup" stepKey="assertSeoUrlPathForCategory">
            <argument name="urlPath" value="{{CustomizedCategory.name}}/{{CustomizedCategory.path}}.html"/>
        </actionGroup>
        <!-- Step 18&19:Go To Storefront and Switch to custom store view for root category & Open root category on Storefront under custom store view -->
        <actionGroup ref="StorefrontGoToCategoryPageActionGroup" stepKey="openCategoryPage">
            <argument name="categoryName" value="$$createTestCategory.name$$"/>
        </actionGroup>
        <actionGroup ref="StorefrontSwitchStoreViewActionGroup" stepKey="switchAgainStoreViewToCustomStore">
            <argument name="storeView" value="NewStoreViewData"/>
        </actionGroup>
        <actionGroup ref="StorefrontAssertProperUrlIsShownActionGroup" stepKey="verifyUpdatedUrlKey">
            <argument name="urlPath" value="{{CustomizedCategory.value}}.html"/>
        </actionGroup>
        <!-- Step 20:Open subcategory for custom store view -->
        <actionGroup ref="StorefrontGoToSubCategoryPageActionGroup" stepKey="goToSubCategoryPage">
            <argument name="categoryName" value="$$createTestCategory.name$$"/>
            <argument name="subCategoryName" value="$$createSubTestCategory.name$$"/>
        </actionGroup>
        <!-- Step 21:Verify url for subcategory for custom store view -->
        <actionGroup ref="StorefrontAssertProperUrlIsShownActionGroup" stepKey="seeUpdatedUrlKey">
            <argument name="urlPath" value="{{CustomizedCategory.value}}/{{CustomizedCategory.urlKey}}.html"/>
        </actionGroup>
        <!-- Step 22:Navigate to Category page in admin -->
        <actionGroup ref="AdminOpenCategoryPageActionGroup" stepKey="openTheAdminCategoryIndexPage"/>
        <actionGroup ref="AdminExpandCategoryTreeActionGroup" stepKey="clickOnExpandCategoryTree"/>
        <actionGroup ref="AdminCategoriesOpenCategoryActionGroup" stepKey="selectSubCategory">
            <argument name="category" value="$$createSubTestCategory$$"/>
        </actionGroup>
        <!-- Step 23&24:Switch To custom store view scope for sub category and Click On Ok Button -->
        <actionGroup ref="SwitchToTheNewStoreViewActionGroup" stepKey="switchToCustomStoreViewInAdmin">
            <argument name="storeViewName" value="{{NewStoreViewData.name}}"/>
        </actionGroup>
        <!-- Step 25:Update data for root category under custom store view scope -->
        <actionGroup ref="ChangeSeoUrlKeyForSubCategoryActionGroup" stepKey="updateSeoUrlKeyForSubCategoryCustomStore">
            <argument name="value" value="{{CustomizedCategory.data}}"/>
        </actionGroup>
        <!-- Step 26:Open storefront -->
        <actionGroup ref="StorefrontOpenHomePageActionGroup" stepKey="goToHomePage"/>
        <!-- Step 27&28:Open subcategory for custom store view and Verify url for subcategory for custom store view -->
        <waitForPageLoad stepKey="waitForPageToBeLoaded"/>
        <actionGroup ref="StorefrontGoToSubCategoryPageActionGroup" stepKey="navigateToSubCategoryStore">
            <argument name="categoryName" value="$$createTestCategory.name$$"/>
            <argument name="subCategoryName" value="$$createSubTestCategory.name$$"/>
        </actionGroup>
        <waitForPageLoad stepKey="waitForPage"/>
        <actionGroup ref="StorefrontAssertProperUrlIsShownActionGroup" stepKey="assertUrlPathForCategoryPage">
            <argument name="urlPath" value="{{CustomizedCategory.value}}/{{CustomizedCategory.data}}.html"/>
        </actionGroup>
    </test>
</tests>
